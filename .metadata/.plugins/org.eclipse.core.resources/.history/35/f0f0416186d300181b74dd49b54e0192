package application;

import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Set;
import java.util.TreeSet;

public class Program {

	public static void main(String[] args) {

		
		/* Diferenças entre listas e Set: o Set não permite elementos repetidos,
		 Set<String> set = new HashSet<>(); //mais rápido e não ordenado
		 Set<String> set = new TreeSet<>(); //mais lento e ordenado pelo compareTo do
		objeto (ou Comparator)*/ 
		Set<String> set = new LinkedHashSet<>(); // velocidade intermediária e elementos na ordem em que são adicionados

		set.add("Tv");
		set.add("Tablet");
		set.add("Notebook");
		set.add("PS4");

		set.remove("Tablet");
		set.removeIf(x -> x.length() > 3);
		set.removeIf(x -> x.charAt(0) == 'T');
		System.out.println(set.contains("Notebook"));
		System.out.println();

		for (String p : set) {
			System.out.println(p);

		}
		System.out.println("------------------------------------------------------------------------------------");

		Set<Integer> a = new TreeSet<>(Arrays.asList(0, 2, 4, 5, 6, 8, 10));
		Set<Integer> b = new TreeSet<>(Arrays.asList(5, 6, 7, 8, 9, 10));
		
		// union
		Set<Integer> c = new TreeSet<>(a);
		c.addAll(b);
		System.out.println(c);
		
		// intersection
		Set<Integer> d = new TreeSet<>(a);
		d.retainAll(b);
		System.out.println(d);
		
		// difference
		Set<Integer> e = new TreeSet<>(a);
		e.removeAll(b);
		System.out.println(e);

	}

}